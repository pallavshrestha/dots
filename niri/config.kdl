// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.

environment{
    QT_QPA_PLATFORMTHEME "qt6ct"
    QT_STYLE_OVERRIDE "kvantum"
}

cursor {
    xcursor-theme "Qogir-dark"
    xcursor-size 16
    
    hide-when-typing
    hide-after-inactive-ms 1000
}

input {
    keyboard {
        track-layout "global"
        xkb {
            // For example:
            // layout "us"
            // file "~/.config/xkb/symbol/us"
            // variant "usfieu"
            options "caps:swapescape" 
        }
    }

    touchpad {
        tap
        // natural-scroll
    }

    mouse {
    }
    warp-mouse-to-focus
    focus-follows-mouse

    trackpoint {
    }
}

layout {
    gaps 5
    // background-color "transparent"
    background-color "00000020"
    // background-color "#2e344000"
    always-center-single-column
    // empty-workspace-above-first

    center-focused-column "never"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667

    }

    default-column-width { proportion 0.5; }


    focus-ring {
        off
        width 1

        active-color "#7fc8ff"

        inactive-color "#505050"

           }

    border {
        // off

        width 2.2
        active-color "#7fc8ff"
        inactive-color "#434c5e"

        urgent-color "#bf616a"
    }

    // You can enable drop shadows for windows.
    shadow {
        // on
        softness 30

        // Spread expands the shadow.
        spread 5

        // Offset moves the shadow relative to the window.
        offset x=0 y=5

        // You can also change the shadow color and opacity.
        color "#0007"
    }

   struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

overview {
    zoom 0.5
    backdrop-color "#4c566a90"

    workspace-shadow {
        // off
        softness 40
        spread 10
        offset x=0 y=15
        color "#2e3440"
    }

}

spawn-at-startup "dunst"
// spawn-at-startup "nm-applet"
spawn-at-startup "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
spawn-at-startup "xwayland-satellite"
spawn-sh-at-startup "~/.config/niri/scripts/refresh.sh"


// To run a shell command (with variables, pipes, etc.), use spawn-sh-at-startup:
// spawn-sh-at-startup "qs -c ~/source/qs/MyAwesomeShell"

hotkey-overlay {
    // Uncomment this line to disable the "Important Hotkeys" pop-up at startup.
    skip-at-startup
}

// workspace "main"

prefer-no-csd

screenshot-path "~/pictures/0-screenshots/Screenshot-%Y-%m-%d_%H.%M.%S.png"

animations {
    // off
    slowdown 2.0
}

window-rule{
    geometry-corner-radius 7
    clip-to-geometry true
}

window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    match app-id="Bluetooth-sendo" title="bluetooth-sendto"
    match app-id="matplotlib"
    match app-id=r#"^org\.pulseaudio\.pavucontrol"#
    match app-id="qutebrowser" title="Whoops!"
    match app-id="zoom" //title="Presenter layout"
    match app-id="KeePassXC"
    match app-id="thunar" title=r#"^Rename"#
    open-floating true
}

window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id="KeePassXC"
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    match app-id=r#"^com\.obsproject\.Studio"#
    match app-id="thunderbird"
    match app-id="teams-for-linux"
    match app-id="zoom"
    match title=r#"^Duck"#
    match title=r#"reddit$"#
    match title=r#"Reddit$"#
    match title=r#"r/"#
    match title=r#"Login"#
    match title=r#"Telegram"#

    block-out-from "screen-capture"
}

window-rule {
    geometry-corner-radius 12
    clip-to-geometry true
}

window-rule{
    draw-border-with-background false
    match app-id="alacritty"
    match app-id="thunar"
    opacity 0.98
}


layer-rule {
    match namespace="waybar"
    block-out-from "screen-capture"
}

layer-rule {
    match namespace="^wallpaper$"
    place-within-backdrop true
}


binds {
    // Keys consist of modifiers separated by + signs, followed by an XKB key name
    // in the end. To find an XKB name for a particular key, you may use a program
    // like wev.
    //
    // "Mod" is a special modifier equal to Super when running on a TTY, and to Alt
    // when running as a winit window.
    //
    // Most actions that you can bind here can also be invoked programmatically with
    // `niri msg action do-something`.

    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+Return hotkey-overlay-title="Open a Terminal: xfce-terminal" { spawn "alacritty"; }
    Mod+d hotkey-overlay-title="Run an Application: rofi" { spawn-sh "rofi -show drun -them ~/.config/rofi/nord.rasi"; }
    Mod+b hotkey-overlay-title="Run Qutebrowser" {spawn-sh "/usr/bin/qutebrowser";}
    Mod+Shift+b hotkey-overlay-title="Qutebrowser: Private window" {spawn-sh "/usr/bin/qutebrowser --target private-window";}
    Mod+n hotkey-overlay-title="Terminal file manager: Ranger"  {spawn-sh "alacritty -e /usr/bin/ranger";}
    Mod+m hotkey-overlay-title="File Manager: Thunar" {spawn-sh "/usr/bin/thunar";}
    Mod+Shift+Escape hotkey-overlay-title="Lock the Screen: swaylock" { spawn "swaylock"; }
    Mod+x {spawn "pkill" "xwayland-satellite" "&&" "xwayland-satellite";}
    Mod+Shift+R {spawn-sh "~/.config/niri/scripts/refresh.sh";}
    Mod+p {spawn-sh "~/.config/scripts/switch-audio-port";}
    Alt+Tab {spawn-sh "rofi -show window -theme ~/.config/rofi/nord.rasi";}

       // Mod+Alt+S allow-when-locked=true hotkey-overlay-title=null { spawn-sh "pkill orca || exec orca"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }

    XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "+10%"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "10%-"; }

    Mod+Tab repeat=false { toggle-overview; }

    Mod+Q repeat=false { close-window; }
    Mod+C repeat=false { close-window; }

    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+L     { focus-column-right; }

    Mod+Shift+H     { move-column-left; }
    Mod+Shift+J     { move-window-to-workspace-down; }
    Mod+Shift+K     { move-window-to-workspace-up; }
    Mod+Shift+L     { move-column-right; }


    Mod+Ctrl+J     { move-workspace-down; }
    Mod+Ctrl+K     { move-workspace-up; }
    Mod+Ctrl+H     { move-workspace-to-monitor-left; }
    Mod+Ctrl+L     { move-workspace-to-monitor-right; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Shift+Home { move-column-to-first; }
    Mod+Shift+End  { move-column-to-last; }

    Mod+Alt+H { focus-monitor-left; }
    // Mod+Ctrl+J { focus-monitor-down; }
    // Mod+Ctrl+K { focus-monitor-up; }
    Mod+Alt+L { focus-monitor-right; }
    Mod+Left  { focus-monitor-left; }
    Mod+Down  { focus-monitor-down; }
    Mod+Up    { focus-monitor-up; }
    Mod+Right { focus-monitor-right; }
    
    Mod+Shift+Left  { move-workspace-to-monitor-left; }
    Mod+Shift+Right { move-workspace-to-monitor-right; }
    Mod+Shift+Up    { move-workspace-up; }
    Mod+Shift+Down  { move-workspace-down; }

    // Mod+Shift+Ctrl+H     { move-workspace-to-monitor-left; }
    // Mod+Shift+Ctrl+J     { move-workspace-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-workspace-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-workspace-to-monitor-right; }

    Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-window-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-window-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-window-to-monitor-right; }


    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+Shift+Page_Down { move-column-to-workspace-down; }
    Mod+Shift+Page_Up   { move-column-to-workspace-up; }

    Mod+Ctrl+Page_Down { move-workspace-down; }
    Mod+Ctrl+Page_Up   { move-workspace-up; }

    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }

    // Switches focus between the current and the previous workspace.
    // Mod+Tab { focus-workspace-previous; }

    Mod+U  { consume-or-expel-window-left; }
    Mod+I { consume-or-expel-window-right; }

    Mod+Comma  { consume-window-into-column; }
    Mod+Shift+BracketLeft  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }
    Mod+Shift+BracketRight { expel-window-from-column; }

    Mod+Z { switch-preset-column-width; }
    Mod+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    Mod+Ctrl+F { expand-column-to-available-width; }



    Mod+Ctrl+C { center-visible-columns; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+Space       { toggle-window-floating; }
    Mod+Shift+Space { switch-focus-between-floating-and-tiling; }

    Mod+W { toggle-column-tabbed-display; }

    Mod+V       { switch-layout "next"; }
    Mod+Shift+V { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    Mod+Shift+E { spawn-sh "~/.config/niri/scripts/powermenu"; }
    Ctrl+Alt+Delete { quit; }

    Mod+Shift+P { power-off-monitors; }
}
